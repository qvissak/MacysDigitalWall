{"version":3,"sources":["../src/KeyboardedInput.js"],"names":["KeyboardedInput","props","handleFocus","bind","handleFocusLost","handleChange","hideKeyboard","state","showKeyboard","input","refs","addEventListener","removeEventListener","event","onChange","target","value","setState","that","setTimeout","document","activeElement","classList","contains","name","className","placeholder","type","min","max","step","pattern","readOnly","enabled","defaultKeyboard","secondaryKeyboard","Component"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMA,e;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACXA,KADW;;AAEjB,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,OAAvB;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,OAApB;AACA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,OAApB;;AAEA,UAAKI,KAAL,GAAa;AACXC,oBAAc,KADH;AAEXC,aAAO;AAFI,KAAb;AAPiB;AAWlB;;;;wCAEmB;AAClB,WAAKC,IAAL,CAAUD,KAAV,CAAgBE,gBAAhB,CAAiC,OAAjC,EAA0C,KAAKN,YAA/C;AACD;;;2CAEsB;AACrB,WAAKK,IAAL,CAAUD,KAAV,CAAgBG,mBAAhB,CAAoC,OAApC,EAA6C,KAAKP,YAAlD;AACD;;;iCAEYQ,K,EAAO;AAClB,WAAKZ,KAAL,CAAWa,QAAX,CAAoBD,MAAME,MAAN,CAAaC,KAAjC;AACD;;;kCAEa;AACZ,WAAKC,QAAL,cAAkB,KAAKV,KAAvB,IAA8BC,cAAc,IAA5C;AACD;;;oCAEeK,K,EAAO;AACrB,UAAIK,OAAO,IAAX;AACAC,iBAAW,YAAU;AAClB,YAAI,CAACC,SAASC,aAAT,CAAuBC,SAAvB,CAAiCC,QAAjC,CAA0C,iBAA1C,CAAD,IAAiE,CAACH,SAASC,aAAT,CAAuBC,SAAvB,CAAiCC,QAAjC,CAA0C,UAA1C,CAAlE,IAA2H,CAACH,SAASC,aAAT,CAAuBC,SAAvB,CAAiCC,QAAjC,CAA0C,cAA1C,CAAhI,EAA2L;AACzLL,eAAKD,QAAL,cAAkBC,KAAKX,KAAvB,IAA8BC,cAAc,KAA5C;AACD;AACH,OAJD,EAIG,CAJH;AAKD;;;mCAEc;AACb,WAAKS,QAAL,cAAkB,KAAKV,KAAvB,IAA8BC,cAAc,KAA5C;AACD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE;AACE,gBAAM,KAAKP,KAAL,CAAWuB,IADnB;AAEE,qBAAW,KAAKvB,KAAL,CAAWwB,SAFxB;AAGE,uBAAa,KAAKxB,KAAL,CAAWyB,WAH1B;AAIL,iBAAO,KAAKzB,KAAL,CAAWe,KAJb;AAKL,gBAAM,KAAKf,KAAL,CAAW0B,IALZ;AAML,mBAAS,KAAKzB,WANT;AAOL,kBAAQ,KAAKE,eAPR;AAQL,eAAK,KAAKH,KAAL,CAAW2B,GARX;AASL,eAAK,KAAK3B,KAAL,CAAW4B,GATX;AAUL,gBAAM,KAAK5B,KAAL,CAAW6B,IAVZ;AAWL,mBAAS,KAAK7B,KAAL,CAAW8B,OAXf;AAYL,oBAAU,KAAK1B,YAZV;AAaL,oBAAU,KAAKJ,KAAL,CAAW+B,QAAX,KAAwB,IAAxB,GAA+B,IAA/B,GAAsC,KAb3C;AAcL,eAAI;AAdC,UADF;AAiBG,aAAKzB,KAAL,CAAWC,YAAX,IAA2B,KAAKP,KAAL,CAAWgC,OAAtC,IAAiD,KAAKhC,KAAL,CAAW+B,QAAX,KAAwB,IAAzE,IACC;AACE,wBAAc,KAAK1B,YADrB;AAEE,2BAAiB,KAAKL,KAAL,CAAWiC,eAF9B;AAGE,6BAAmB,KAAKjC,KAAL,CAAWkC,iBAHhC;AAIE,qBAAW,KAAKzB,IAAL,CAAUD;AAJvB;AAlBJ,OADF;AA4BD;;;;EAxE2B,gBAAM2B,S;;kBA2ErBpC,e","file":"KeyboardedInput.js","sourcesContent":["import React from 'react';\r\nimport Keyboard from './Keyboard';\r\nimport KeyboardButton from './KeyboardButton';\r\n\r\nclass KeyboardedInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleFocus = this.handleFocus.bind(this);\r\n    this.handleFocusLost = this.handleFocusLost.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.hideKeyboard = this.hideKeyboard.bind(this);\r\n\r\n    this.state = {\r\n      showKeyboard: false,\r\n      input: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refs.input.addEventListener('input', this.handleChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.refs.input.removeEventListener('input', this.handleChange);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.props.onChange(event.target.value);\r\n  }\r\n\r\n  handleFocus() {\r\n    this.setState({...this.state, showKeyboard: true});\r\n  }\r\n\r\n  handleFocusLost(event) {\r\n    var that = this;\r\n    setTimeout(function(){\r\n       if (!document.activeElement.classList.contains(\"keyboard-button\") && !document.activeElement.classList.contains(\"keyboard\") && !document.activeElement.classList.contains(\"keyboard-row\")) {\r\n         that.setState({...that.state, showKeyboard: false});\r\n       }\r\n    }, 0);\r\n  }\r\n\r\n  hideKeyboard() {\r\n    this.setState({...this.state, showKeyboard: false});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input \r\n          name={this.props.name}\r\n          className={this.props.className}\r\n          placeholder={this.props.placeholder}\r\n\t  value={this.props.value} \r\n\t  type={this.props.type} \r\n\t  onFocus={this.handleFocus} \r\n\t  onBlur={this.handleFocusLost} \r\n\t  min={this.props.min}\r\n\t  max={this.props.max}\r\n\t  step={this.props.step}\r\n\t  pattern={this.props.pattern}\r\n\t  onChange={this.handleChange}\r\n\t  readOnly={this.props.readOnly === true ? true : false}\r\n\t  ref=\"input\" \r\n\t/>\r\n        {this.state.showKeyboard && this.props.enabled && this.props.readOnly !== true &&\r\n          <Keyboard\r\n            hideKeyboard={this.hideKeyboard}\r\n            defaultKeyboard={this.props.defaultKeyboard}\r\n            secondaryKeyboard={this.props.secondaryKeyboard}\r\n            inputNode={this.refs.input}\r\n          />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KeyboardedInput;\r\n"]}