{"version":3,"sources":["../src/Keyboard.js"],"names":["Keyboard","props","handleLetterButtonClick","bind","handleBackspaceClick","handleLanguageClick","clearInput","handleShiftClick","handleSymbolsClick","state","currentLanguage","defaultKeyboard","showSymbols","uppercase","isUppercase","setState","secondaryKeyboard","inputNode","value","onClick","setTimeout","focus","dispatchEvent","Event","key","selectionStart","selectionEnd","e","length","nextValue","substring","setSelectionRange","isFirstLetterUppercase","type","dataset","nextSelectionPosition","keysSet","map","keyRow","toUpperCase","symbolsKeyValue","rightButtons","keys","getKeys","numbers","getSymbolsKeyValue","button","hideKeyboard","propTypes","any","isRequired","func","bool","string","defaultProps"],"mappings":"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","file":"Keyboard.js","sourcesContent":["import React, {PureComponent, PropTypes} from 'react';\r\nimport KeyboardButton from './KeyboardButton';\r\n\r\nimport LatinLayout from './layouts/LatinLayout';\r\nimport CyrillicLayout from './layouts/CyrillicLayout';\r\nimport SymbolsLayout from './layouts/SymbolsLayout';\r\nimport GermanLayout from './layouts/GermanLayout';\r\n\r\nimport BackspaceIcon from './icons/BackspaceIcon';\r\nimport LanguageIcon from './icons/LanguageIcon';\r\nimport ShiftIcon from './icons/ShiftIcon';\r\n\r\n\r\nexport default class Keyboard extends PureComponent {\r\n\tstatic propTypes = {\r\n\t\tinputNode: PropTypes.any.isRequired,\r\n\t\tonClick: PropTypes.func,\r\n\t\tisFirstLetterUppercase: PropTypes.bool,\r\n\t\tdefaultKeyboard: PropTypes.string,\r\n\t\tsecondaryKeyboard: PropTypes.string,\r\n\t\thideKeyboard: PropTypes.func,\r\n\t};\r\n\r\n\tstatic defaultProps = {\r\n\t\trightButtons: [],\r\n\t\tisFirstLetterUppercase: false,\r\n\t\tdefaultKeyboard: 'us',\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleLetterButtonClick = this.handleLetterButtonClick.bind(this);\r\n\t\tthis.handleBackspaceClick = this.handleBackspaceClick.bind(this);\r\n\t\tthis.handleLanguageClick = this.handleLanguageClick.bind(this);\r\n\t\tthis.clearInput = this.clearInput.bind(this);\r\n\t\tthis.handleShiftClick = this.handleShiftClick.bind(this);\r\n\t\tthis.handleSymbolsClick = this.handleSymbolsClick.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrentLanguage: props.defaultKeyboard,\r\n\t\t\tshowSymbols: false,\r\n\t\t\tuppercase: this.isUppercase(),\r\n\t\t};\r\n\t}\r\n\r\n\thandleLanguageClick() {\r\n\t\tthis.setState({currentLanguage: this.state.currentLanguage === this.props.defaultKeyboard ? this.props.secondaryKeyboard : this.props.defaultKeyboard });\r\n\t}\r\n\r\n\tclearInput() {\r\n\t\tconst {inputNode} = this.props;\r\n\r\n\t\tinputNode.value = '';\r\n\t\tif (this.props.onClick) {\r\n\t\t\tthis.props.onClick('');\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tinputNode.focus();\r\n\t\t}, 0);\r\n\t\tinputNode.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\thandleShiftClick() {\r\n\t\tthis.setState({uppercase: !this.state.uppercase});\r\n\t}\r\n\r\n\thandleSymbolsClick() {\r\n\t\tthis.setState({showSymbols: !this.state.showSymbols});\r\n\t}\r\n\r\n\thandleLetterButtonClick(key) {\r\n\t\tconst {inputNode} = this.props;\r\n\t\tconst {value} = inputNode;\r\n                let selectionStart;\r\n                let selectionEnd;\r\n                try {\r\n                        selectionStart = inputNode.selectionStart; \r\n                        selectionEnd = inputNode.selectionEnd;\r\n                } catch (e) {\r\n                        selectionStart = value.length;\r\n                        selectionEnd = value.length;\r\n                }\r\n\t\tconst nextValue = value.substring(0, selectionStart) + key + value.substring(selectionEnd);\r\n\r\n\t\tinputNode.value = nextValue;\r\n\t\tif (this.props.onClick) {\r\n\t\t\tthis.props.onClick(nextValue);\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tinputNode.focus();\r\n\t\t\ttry {\r\n\t\t\t\tinputNode.setSelectionRange(selectionStart + 1, selectionStart + 1);\r\n\t\t\t} catch (e) {}\r\n\t\t}, 0);\r\n\t\tthis.setState({uppercase: this.isUppercase()});\r\n\t\tinputNode.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tisUppercase() {\r\n\t\tconst {inputNode, isFirstLetterUppercase} = this.props;\r\n\t\treturn inputNode.type !== 'password' &&\r\n\t\t\tinputNode.dataset.type !== 'email' &&\r\n\t\t\t!inputNode.value.length && isFirstLetterUppercase;\r\n\t}\r\n\r\n\thandleBackspaceClick() {\r\n\t\tconst {inputNode} = this.props;\r\n                const {value} = inputNode;\r\n                let selectionStart;\r\n                let selectionEnd;\r\n                try {\r\n                        selectionStart = inputNode.selectionStart; \r\n                        selectionEnd = inputNode.selectionEnd;\r\n                } catch (e) {\r\n                        selectionStart = 0;\r\n                        selectionEnd = value.length;\r\n                }\r\n\r\n\t\tlet nextValue;\r\n\t\tlet nextSelectionPosition;\r\n\t\tif (selectionStart === selectionEnd) {\r\n\t\t\tnextValue = value.substring(0, selectionStart - 1) + value.substring(selectionEnd);\r\n\t\t\tnextSelectionPosition = selectionStart - 1;\r\n\t\t} else {\r\n\t\t\tnextValue = value.substring(0, selectionStart) + value.substring(selectionEnd);\r\n\t\t\tnextSelectionPosition = selectionStart;\r\n\t\t}\r\n\t\tnextSelectionPosition = (nextSelectionPosition > 0) ? nextSelectionPosition : 0;\r\n\r\n\t\tinputNode.value = nextValue;\r\n\t\tif (this.props.onClick) {\r\n\t\t\tthis.props.onClick(nextValue);\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tinputNode.focus();\r\n\t\t\ttry {\r\n\t\t\t\tinputNode.setSelectionRange(nextSelectionPosition, nextSelectionPosition);\r\n\t\t\t} catch (e) {}\r\n\t\t}, 0);\r\n\t\tthis.setState({uppercase: this.isUppercase()});\r\n\t\tinputNode.dispatchEvent(new Event('input'));\r\n\t}\r\n\r\n\tgetKeys() {\r\n\t\tlet keysSet;\r\n\t\tif (this.state.showSymbols) {\r\n\t\t\tkeysSet = SymbolsLayout;\r\n\t\t} else if (this.state.currentLanguage === 'us') {\r\n\t\t\tkeysSet = LatinLayout;\r\n\t\t} else if (this.state.currentLanguage === 'de') {\r\n\t\t\tkeysSet = GermanLayout;\r\n\t\t} else if (this.state.currentLanguage === 'ru') {\r\n\t\t\tkeysSet = CyrillicLayout;\r\n\t\t} else {\r\n\t\t\tkeysSet = LatinLayout;\r\n\t\t}\r\n\r\n\t\treturn this.state.uppercase ?\r\n\t\t\tkeysSet.map(keyRow => keyRow.map(key => key.toUpperCase()))\r\n\t\t\t: keysSet;\r\n\t}\r\n\r\n\tgetSymbolsKeyValue() {\r\n\t\tlet symbolsKeyValue;\r\n\t\tif (!this.state.showSymbols) {\r\n\t\t\tsymbolsKeyValue = '.?!&';\r\n\t\t} else if (this.state.currentLanguage === 'us' || this.state.currentLanguage === 'de') {\r\n\t\t\tsymbolsKeyValue = 'Abc';\r\n\t\t} else if (this.state.currentLanguage === 'ru') {\r\n\t\t\tsymbolsKeyValue = 'Абв';\r\n\t\t} else {\r\n\t\t\tsymbolsKeyValue = 'Abc';\r\n\t\t}\r\n\t\treturn symbolsKeyValue;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {rightButtons, inputNode, secondaryKeyboard} = this.props;\r\n\t\tconst keys = this.getKeys();\r\n\t\tconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\r\n\t\tconst symbolsKeyValue = this.getSymbolsKeyValue();\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"keyboard keyboard-wrapper\">\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t{numbers.map((button) =>\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={button}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t\tclasses={\"keyboard-numberButton\"}\r\n\t\t\t\t\t\t\tkey={button}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tvalue={<BackspaceIcon />}\r\n\t\t\t\t\t\tonClick={this.handleBackspaceClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t{keys[0].map((button) =>\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={button}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t\tkey={button}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t{keys[1].map((button) =>\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={button}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t\tkey={button}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tclasses=\"shift-symbols\"\r\n\t\t\t\t\t\tvalue={<ShiftIcon />}\r\n\t\t\t\t\t\tonClick={this.handleShiftClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{keys[2].map((button) =>\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={button}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t\tkey={button}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tclasses=\"shift-symbols\"\r\n\t\t\t\t\t\tvalue={symbolsKeyValue}\r\n\t\t\t\t\t\tonClick={this.handleSymbolsClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"keyboard-row\">\r\n\t\t\t\t\t{typeof secondaryKeyboard !== 'undefined' ?\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={<LanguageIcon />}\r\n\t\t\t\t\t\t\tonClick={this.handleLanguageClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t: null}\r\n\t\t\t\t\t{inputNode.dataset.type === 'email' ?\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={'@'}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t: null}\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tvalue={' '}\r\n\t\t\t\t\t\tclasses=\"keyboard-space\"\r\n\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{inputNode.dataset.type === 'email' ?\r\n\t\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\t\tvalue={'.'}\r\n\t\t\t\t\t\t\tonClick={this.handleLetterButtonClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t: null}\r\n\t\t\t\t\t<KeyboardButton\r\n\t\t\t\t\t\tvalue={'↧'}\r\n\t\t\t\t\t\tclasses=\"keyboard-submit-button\"\r\n\t\t\t\t\t\tonClick={this.props.hideKeyboard}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]}